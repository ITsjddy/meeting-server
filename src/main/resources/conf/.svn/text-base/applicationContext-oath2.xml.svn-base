<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd 
	http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

<!-- 	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager">
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="clinetAuthenticationEntryPoint" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="accessDeniedHandler" />
	</security:http> -->
	
<!-- 	<security:http pattern="/rs/**" >
		<security:anonymous enabled="false" />
		<security:intercept-url pattern="/rs/**"
			access="ROLE_ABCS" />
		<security:custom-filter ref="mobileResourceServer"
			before="PRE_AUTH_FILTER" />
		<security:access-denied-handler ref="accessDeniedHandler" />
	</security:http> -->
 
	<security:http pattern="/rs/**" authentication-manager-ref="rsAuthenticationManager">
		<security:csrf disabled="true"/>
		<security:http-basic />
		<security:intercept-url pattern="/**" access="hasRole('ROLE_CUSTOMER')" />
   	</security:http> 
   	
   	
   	
 <!--   	<bean id="clinetAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
 -->	
	
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
 	<security:authentication-manager id="rsAuthenticationManager" alias="rsAuthenticationManager">
		<security:authentication-provider >
			<security:user-service>
				<security:user name="tom" password="12345678" authorities="ROLE_CUSTOMER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> 
	
<!-- 	<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />
	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="inMemoryClientDetailService"/>
	</bean>
	
	<bean id="accessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<bean id="userApprovalHandler"
		class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler" />
	
	TODO
	<bean id="inMemoryClientDetailService" class="org.springframework.security.oauth2.provider.client.InMemoryClientDetailsService"></bean>
	<bean id="clientDetailsService" class="com.smartdot.meeting.server.common.security.CustomUserDetailsService" />
	<bean id="clientDetailsUserDetailsService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="inMemoryClientDetailService" />
	</bean>
	
	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>
	
	<security:authentication-manager id="clientAuthenticationManager">
		<security:authentication-provider
			user-service-ref="clientDetailsUserDetailsService" />
	</security:authentication-manager>
	
	<oauth2:authorization-server
		client-details-service-ref="inMemoryClientDetailService" token-services-ref="tokenServices"
		user-approval-handler-ref="userApprovalHandler">
		<oauth2:authorization-code />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>
	
	<oauth2:resource-server id="mobileResourceServer"
		resource-id="mobile-resource" token-services-ref="tokenServices" />
		<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg> 
	</bean>-->
	
</beans>
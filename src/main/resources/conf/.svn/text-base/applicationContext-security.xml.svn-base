<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd">
    
    
    <!-- 不拦截的跳转页 跳转页 -->
	<http pattern="/dispatcher/login/login**" security="none" />
	<http pattern="/static/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/dispatcher/test/**" security="none" />

	<!-- 拦截的 配置 -->
    <http use-expressions="true" authentication-manager-ref="authenticationManager">
    	<!-- 是否禁 用CSRF(跨站攻击)保护 -->
		<csrf disabled="true"/>
		<!-- 是否禁用 为response添加安全header信息-->
		<headers defaults-disabled="true">
		   <cache-control/>
		</headers>
		
		<intercept-url pattern="/dispatcher/**" access="isAuthenticated()" />
    	<form-login login-page="/dispatcher/login/login" 
    		always-use-default-target="true" 
    		default-target-url="/dispatcher/main/index" authentication-failure-url="/dispatcher/login/login?error" 
    		username-parameter="username" password-parameter="password" />
    	
    	<!-- 无权限拦截页 -->
    	<!-- <access-denied-handler ref="accessDeniedHandler"/> -->
    	<access-denied-handler error-page="/dispatcher/login/acccessDenied" />
    	
    	<!-- 自定义filter -->
		<custom-filter ref="customFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
    	
    	<!-- session超时 配置 -->
    	<session-management invalid-session-url="/dispatcher/login/login" >
    		<concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
    	</session-management>
    	<!-- 指定退出系统后，跳转的地方 -->
    	<logout logout-url="/j_spring_security_logout" logout-success-url="/dispatcher/login/login" invalidate-session="true" delete-cookies="JSESSIONID"/>
    </http>
        
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager id="authenticationManager" alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
	<!-- 密码加密方式 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<!-- 自定义用户验证服务 -->
	<beans:bean id="customUserDetailsService"
		class="com.smartdot.meeting.server.common.security.CustomUserDetailsService" />

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="customSecurityMetadataSource"
		class="com.smartdot.meeting.server.common.security.CustomFilterInvocationSecurityMetadataSource" />

	<!-- 自定义访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="customAccessDecisionManager"
		class="com.smartdot.meeting.server.common.security.CustomAccessDecisionManager" />
		
	<!-- 自定义Filter -->
	<beans:bean id="customFilter"
		class="com.smartdot.meeting.server.common.filter.CustomFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="customAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" />
	</beans:bean>
	
	<!-- 自定义AccessDeniedHandler -->
	<beans:bean id="accessDeniedHandler" class="com.smartdot.meeting.server.common.security.CustomAccessDeniedHandlerManager">  
		<beans:property name="accessDeniedUrl" value="/dispatcher/login/acccessDenied" />  
  	</beans:bean>
  	
 
</beans:beans>  
